---

- name: Disable swap, set SELinux permissive and disable firewall
  hosts: master, workers
  gather_facts: false
  become: true
  tasks:
    # ---------------- Disable swap ---------------- #
    - name: Turn off all swap immediately
      ansible.builtin.command: swapoff -a
      changed_when: false

    - name: Remove swap entry from /etc/fstab
      ansible.posix.mount:
        name: none  # swap usually doesnâ€™t have a mount point
        fstype: swap
        state: absent

    - name: Check if any swap is active (swapon)
      ansible.builtin.command: swapon --summary
      register: swapon_output
      failed_when: swapon_output.stdout != ""
      changed_when: false

    # ---------------- Set SELinux to permissive ---------------- #
    - name: Gather only selinux fact
      ansible.builtin.setup:
        gather_subset:
          - selinux

    - name: Set SELinux mode to permissive immediately
      ansible.builtin.command: 'setenforce 0'
      changed_when: false
      when: ansible_facts.selinux.status == "enabled"

    - name: Ensure SELinux is set to permissive in config file
      ansible.builtin.lineinfile:
        path: /etc/selinux/config
        regexp: '^SELINUX='
        line: 'SELINUX=permissive'

    - name: Verify SELinux is in permissive mode
      ansible.builtin.command: getenforce
      register: selinux_mode
      changed_when: false

    - name: Display current SELinux mode
      ansible.builtin.debug:
        msg: "Current SELinux mode is: {{ selinux_mode.stdout }}"

    # ---------------- Disable firewall ---------------- #
    - name: Stop firewalld service
      ansible.builtin.service:
        name: firewalld
        state: stopped

    - name: Disable firewalld service permanently
      ansible.builtin.service:
        name: firewalld
        enabled: false
      register: firewalld_enabled

    - name: Get firewalld service status
      ansible.builtin.systemd:
        name: firewalld
        state: started
      register: firewalld_status

    - name: Display whether firewalld is running
      ansible.builtin.debug:
        msg: "Firewalld is {{ 'running' if firewalld_status.status['ActiveState'] == 'active' else 'not running' }}"

    - name: Display whether firewalld is enabled at boot
      ansible.builtin.debug:
        msg: "Firewalld is {{ 'enabled' if firewalld_enabled.enabled == true else 'disabled' }} at boot"

    # --------------- Enable Required Kernel Modules --------------- #
    - name: Persistently load required kernel modules
      ansible.builtin.copy:
        dest: /etc/modules-load.d/k8s.conf
        content: |
          # for k8s networking
          overlay # enables an union mount filesystem used by container runtimes
          br_netfilter # used by container runtimes bridge networking

          # for IPVS-based kube-proxy
          ip_vs
          ip_vs_rr
          ip_vs_wrr
          ip_vs_sh
        owner: root
        group: root
        mode: '0644'

    - name: Load kernel modules immediately
      ansible.builtin.command:
        cmd: modprobe "{{ item }}"
      loop: ['overlay', 'br_netfilter', 'ip_vs', 'ip_vs_rr', 'ip_vs_wrr', 'ip_vs_sh']
      changed_when: false

    # --------------- Sysctl to adjust the kernel parameters for IPV4/IPV6 ip bridge and ip forwarding --------------- #
    # TODO - to set it up permanently
    
    - name: Enables sysctl IPV4/IPV6 networking params
      ansible.posix.sysctl:
        name: "{{ item }}"
        value: '1'
        state: present
        reload: true
      loop: ['net.bridge.bridge-nf-call-iptables', 'net.bridge.bridge-nf-call-ip6tables', 'net.ipv4.ip_forward']



