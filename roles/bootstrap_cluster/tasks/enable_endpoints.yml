---
# ----------------------- Enable Monitoring Endpoints on Master ----------------------- #
# kube-controller-manager endpoint
# if prometheus is not running at the master node. 0.0.0.0 makes the metrics endpoint 
# accessible from any interface, so it is better to secure it (TODO)
- name: Change bind-address to 0.0.0.0 for kube-controller-manager 
  ansible.builtin.replace:
    path: /etc/kubernetes/manifests/kube-controller-manager.yaml
    regexp: '^(\s*)- --bind-address=.*'
    replace: '\1- --bind-address=0.0.0.0'

# exposes metrics over HTTPS on secure-port 10257
- name: Ensure secure port is enabled on kube-controller-manager
  ansible.builtin.lineinfile:
    path: /etc/kubernetes/manifests/kube-controller-manager.yaml
    line: "    - --secure-port=10257"
    insertafter: '^ *- --use-service-account-credentials'
    create: no

# etcd endpoint
# if prometheus is not running at the master node. 0.0.0.0 makes the metrics endpoint 
# accessible from any interface, so it is better to secure it (TODO)
- name: Update etcd metrics listen address to allow scraping
  ansible.builtin.replace:
    path: /etc/kubernetes/manifests/etcd.yaml
    regexp: '--listen-metrics-urls=http://127\.0\.0\.1:2381'
    replace: '--listen-metrics-urls=http://0.0.0.0:2381'

# kube-scheduler endpoint
# if prometheus is not running at the master node. 0.0.0.0 makes the metrics endpoint 
# accessible from any interface, so it is better to secure it (TODO)
- name: Allow Prometheus to scrape kube-scheduler metrics by changing bind address
  ansible.builtin.replace:
    path: /etc/kubernetes/manifests/kube-scheduler.yaml
    regexp: '--bind-address=127\.0\.0\.1'
    replace: '--bind-address=0.0.0.0'

# kube-proxy endpoint
# if prometheus is not running at the master node. 0.0.0.0 makes the metrics endpoint 
# accessible from any interface, so it is better to secure it (TODO)
# Since kubectl command talks to api server, wait to make sure api server is up and healthy
- name: Setup kube-proxy metrics (sequentially, on master)
  block:
    - name: Starting kube-proxy metrics enable block
      ansible.builtin.debug:
        msg: "+++++++++ Running kube-proxy metrics setup on {{ inventory_hostname }}"

    - name: Wait for kube-proxy configmap to be available
      ansible.builtin.command: kubectl -n kube-system get configmap kube-proxy
      register: proxy_cm
      retries: 15
      delay: 5
      until: proxy_cm.rc == 0
      failed_when: proxy_cm.rc != 0
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
  
    - name: Wait for Kubernetes API to respond
      ansible.builtin.command: kubectl get --raw='/healthz'
      register: api_health
      retries: 15
      delay: 5
      until: api_health.rc == 0
      failed_when: api_health.rc != 0
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf

    - name: Wait for kube-proxy configmap to be available
      ansible.builtin.command: timeout 10s kubectl -n kube-system get configmap kube-proxy
      register: proxy_cm
      retries: 12
      delay: 10
      until: proxy_cm.rc == 0
      failed_when: proxy_cm.rc != 0
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
 
    - name: Get kube-proxy configmap and modify it locally
      ansible.builtin.shell: |
        kubectl -n kube-system get configmap kube-proxy -o yaml > /tmp/kube-proxy.yaml
        sed -i 's/metricsBindAddress: ""/metricsBindAddress: 0.0.0.0:10249/' /tmp/kube-proxy.yaml
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf

    - name: Apply modified kube-proxy configmap
      ansible.builtin.command: kubectl apply -f /tmp/kube-proxy.yaml
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf

    - name: Restart kube-proxy pods
      ansible.builtin.shell: |
        kubectl -n kube-system delete pod -l k8s-app=kube-proxy
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf

